Index: app/src/main/java/com/example/simplyrecipes/Activities/SignInActivity.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.simplyrecipes.Activities;\r\n\r\nimport androidx.annotation.NonNull;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\n\r\nimport android.content.Intent;\r\nimport android.os.Bundle;\r\nimport android.util.Log;\r\nimport android.view.View;\r\nimport android.widget.Button;\r\nimport android.widget.EditText;\r\nimport android.widget.Toast;\r\n\r\nimport com.example.simplyrecipes.R;\r\nimport com.google.android.gms.tasks.OnCompleteListener;\r\nimport com.google.android.gms.tasks.Task;\r\nimport com.google.firebase.auth.AuthResult;\r\nimport com.google.firebase.auth.FirebaseAuth;\r\nimport com.google.firebase.auth.FirebaseUser;\r\nimport com.google.firebase.database.DataSnapshot;\r\nimport com.google.firebase.database.DatabaseError;\r\nimport com.google.firebase.database.DatabaseReference;\r\nimport com.google.firebase.database.FirebaseDatabase;\r\nimport com.google.firebase.database.ValueEventListener;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class SignInActivity extends AppCompatActivity {\r\n    private FirebaseAuth mAuth;\r\n    public FirebaseUser user; // firebase reference to the currently logged in user\r\n    List<Recipe> favoriteRecipes;\r\n    CurrentUser currentUser;\r\n    DatabaseReference reference;\r\n    EditText loginEmail;\r\n    EditText loginPassword;\r\n    Button signInButton;\r\n    Button signUpButton;\r\n\r\n\r\n\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_sign_in);\r\n\r\n        favoriteRecipes = new ArrayList<>();\r\n\r\n        // Initialize Firebase Auth\r\n        mAuth = FirebaseAuth.getInstance();\r\n        loginEmail = findViewById(R.id.editTextTextEmailAddress);\r\n        loginPassword = findViewById(R.id.editTextTextPassword);\r\n        signInButton = findViewById(R.id.sign_in_button);\r\n        signUpButton = findViewById(R.id.sign_up_button);\r\n        signUpButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                Intent intent = new Intent(SignInActivity.this, SignUpActivity.class);\r\n                startActivity(intent);\r\n            }\r\n        });\r\n        signInButton.setOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                if(loginEmail.getText().toString().isEmpty() || loginPassword.getText().toString().isEmpty()){\r\n                    Toast.makeText(SignInActivity.this, \"Please Enter All Fields\", Toast.LENGTH_SHORT).show();\r\n                }else{\r\n                    String email = loginEmail.getText().toString();\r\n                    String password = loginPassword.getText().toString();\r\n                    signIn(email, password);\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n\r\n    @Override\r\n    public void onStart() {\r\n        super.onStart();\r\n        FirebaseUser currentUser = mAuth.getCurrentUser();\r\n    }\r\n\r\n    private void signIn(String email, String password){\r\n        mAuth.signInWithEmailAndPassword(email, password)\r\n                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {\r\n                    @Override\r\n                    public void onComplete(@NonNull Task<AuthResult> task) {\r\n                        if (task.isSuccessful()) {\r\n                            // Sign in success, update UI with the signed-in user's information\r\n                            Log.d(\"SignIn\", \"signInWithEmail:success\");\r\n                            user = mAuth.getCurrentUser();\r\n                            initializeFavoriteRecipes();\r\n                            ApplicationClass.currentUser = new CurrentUser(mAuth.getUid(), mAuth.getCurrentUser().getEmail(),favoriteRecipes);\r\n                            Intent intent = new Intent(SignInActivity.this, MainActivity.class);\r\n                            startActivity(intent);\r\n                        } else {\r\n                            // If sign in fails, display a message to the user.\r\n                            Log.w(\"SignIn\", \"signInWithEmail:failure\", task.getException());\r\n                            Toast.makeText(SignInActivity.this, \"Authentication failed.\",\r\n                                    Toast.LENGTH_SHORT).show();\r\n                        }\r\n                    }\r\n                });\r\n    }\r\n\r\n    private void initializeFavoriteRecipes() {\r\n        int length = 0;\r\n        reference = FirebaseDatabase.getInstance().getReference(\"Favorites/users/\"+ mAuth.getCurrentUser().getUid());\r\n        reference.addValueEventListener(new ValueEventListener() {\r\n            @Override\r\n            public void onDataChange(@NonNull DataSnapshot snapshot) {\r\n                for(DataSnapshot snap : snapshot.getChildren()) {\r\n                    int recipeID = 0; // testing purposes\r\n                    if(snap.getValue().toString() != \"\") {\r\n                        recipeID = Integer.parseInt(snap.getValue().toString());\r\n                    }\r\n\r\n                    String recipeName = snap.getKey().toString();\r\n                    if (recipeID == 0) {\r\n                        continue;\r\n                    } else {\r\n                        Recipe recipe = new Recipe(recipeID, recipeName);\r\n                        favoriteRecipes.add(recipe);\r\n                    }\r\n\r\n                }\r\n\r\n            }\r\n\r\n            @Override\r\n            public void onCancelled(@NonNull DatabaseError error) {\r\n                System.out.println(\"Error\" + error.getMessage());\r\n            }\r\n        });\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/simplyrecipes/Activities/SignInActivity.java	(revision b90755def42756683ccc8edb7479a41d43c6cab2)
+++ app/src/main/java/com/example/simplyrecipes/Activities/SignInActivity.java	(date 1605222437673)
@@ -106,7 +106,8 @@
 
     private void initializeFavoriteRecipes() {
         int length = 0;
-        reference = FirebaseDatabase.getInstance().getReference("Favorites/users/"+ mAuth.getCurrentUser().getUid());
+        reference =
+                FirebaseDatabase.getInstance().getReference("users/"+ mAuth.getCurrentUser().getUid() + "/Favorite");
         reference.addValueEventListener(new ValueEventListener() {
             @Override
             public void onDataChange(@NonNull DataSnapshot snapshot) {
Index: app/src/main/java/com/example/simplyrecipes/Activities/HomePageFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.simplyrecipes.Activities;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.appcompat.app.AppCompatActivity;\r\nimport androidx.fragment.app.Fragment;\r\nimport androidx.recyclerview.widget.LinearLayoutManager;\r\nimport androidx.recyclerview.widget.RecyclerView;\r\n\r\nimport android.content.Intent;\r\nimport android.database.DataSetObserver;\r\nimport android.graphics.Bitmap;\r\nimport android.graphics.BitmapFactory;\r\nimport android.nfc.Tag;\r\nimport android.os.AsyncTask;\r\nimport android.os.Bundle;\r\nimport android.renderscript.ScriptGroup;\r\nimport android.util.Log;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\nimport android.widget.Adapter;\r\nimport android.widget.ImageView;\r\nimport android.widget.TextView;\r\n\r\nimport com.example.simplyrecipes.R;\r\nimport com.squareup.picasso.Picasso;\r\nimport com.squareup.picasso.PicassoProvider;\r\n\r\nimport org.jetbrains.annotations.NotNull;\r\nimport org.json.JSONArray;\r\nimport org.json.JSONException;\r\nimport org.json.JSONObject;\r\nimport org.jsoup.Jsoup;\r\nimport org.jsoup.nodes.Document;\r\n\r\nimport java.io.IOException;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Random;\r\n\r\nimport okhttp3.Call;\r\nimport okhttp3.Callback;\r\nimport okhttp3.HttpUrl;\r\nimport okhttp3.OkHttpClient;\r\nimport okhttp3.Request;\r\nimport okhttp3.Response;\r\n\r\n/**\r\n * Fragment for the Home Page\r\n * Handles loading different recipes from the EDAMAM API\r\n *\r\n * @author William Lai, Dung Vo\r\n * @version 2.0\r\n */\r\n\r\npublic class HomePageFragment extends Fragment{\r\n    private static final String Tag = \"HomePageFragment\";\r\n    private ImageView recipe_of_the_week_image;\r\n    private TextView popular_recipes_text;\r\n    private String SPOONACULAR_API_KEY = \"d166d242afmsh34a43231b52cb39p144850jsn8fe031c85cf5\";\r\n    private static final String MEDITTERANIAN_URL = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/random?number=15&limitLicense=false&tags=mediterranean\";\r\n    private static final String ASIAN_URL = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?limitLicense=true&offset=0&number=10&cuisine=chinese%2Cjapanese%2Ckorean%2Cvietnamese%2Cthai%2Cindian&ranking=2&instructionsRequired=true\";\r\n    private static final String WESTERN_URL = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/searchComplex?limitLicense=true&offset=0&number=10&cuisine=american%2Csouthern%2Cfrench%2Cbritish%2Citalian&ranking=2&instructionsRequired=true\";\r\n    private static final String POPULAR_URL = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/random?number=15&limitLicense=false\";\r\n\r\n    String recipeOfWeekImageUrl = null;\r\n    RecyclerView popularRecyclerView;\r\n    RecyclerView asianRecyclerView;\r\n    RecyclerView westernRecyclerView;\r\n    RecyclerView mediterraneanRecyclerView;\r\n\r\n    List<Recipe> popularRecipes;\r\n    List<Recipe> asianRecipes;\r\n    List<Recipe> westernRecipes;\r\n    List<Recipe> mediterraneanRecipes;\r\n\r\n    HomePageAdapter popularAdapter;\r\n    HomePageAdapter asianAdapter;\r\n    HomePageAdapter westernAdapter;\r\n    HomePageAdapter mediterraneanAdapter;\r\n\r\n\r\n\r\n\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        View view = inflater.inflate(R.layout.fragment_activity_home, container, false);\r\n        return view;\r\n    }\r\n\r\n    public void onViewCreated(View view, Bundle savedInstanceState) {\r\n        super.onViewCreated(view, savedInstanceState);\r\n        recipe_of_the_week_image = view.findViewById(R.id.recipe_of_the_week_image);\r\n\r\n        popularRecyclerView = view.findViewById(R.id.popular_recipes_recyclerview);\r\n        popularRecipes = new ArrayList<>();\r\n\r\n        asianRecyclerView = view.findViewById(R.id.asian_recipes_recyclerview);\r\n        asianRecipes = new ArrayList<>();\r\n\r\n        westernRecyclerView = view.findViewById(R.id.western_recipes_recyclerview);\r\n        westernRecipes = new ArrayList<>();\r\n\r\n        mediterraneanRecyclerView = view.findViewById(R.id.mediterranean_recipes_recyclerview);\r\n        mediterraneanRecipes = new ArrayList<>();\r\n\r\n//        extractRecipes(MEDITTERANIAN_URL,mediterraneanRecipes, \"Meditteranean\");\r\n//        extractRecipes(ASIAN_URL, asianRecipes, \"Asian\");\r\n//        extractRecipes(WESTERN_URL, westernRecipes, \"Western\");\r\n        extractRecipes(POPULAR_URL, popularRecipes, \"Popular\");\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    /**\r\n     *\r\n     * @param urlString // api url string to search recipes\r\n     * @param recipeList // list to store the recipes retrieve the results\r\n     * @param recipeType // indicating what type of the recipe to set up the right recycler view\r\n     */\r\n    private void extractRecipes(String urlString, final List<Recipe> recipeList, final String recipeType) {\r\n        // use client library to set up the GET request\r\n        OkHttpClient client = new OkHttpClient();\r\n        Request request = new Request.Builder()\r\n                .url(urlString).get()\r\n                .addHeader(\"x-rapidapi-key\", SPOONACULAR_API_KEY)\r\n                .addHeader(\"x-rapidapi-host\", \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\")\r\n                .build();\r\n\r\n        // call the api's url\r\n        client.newCall(request).enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(@NotNull Call call, @NotNull IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {\r\n                // response is successful and a JSON object is returned\r\n                Random rand = new Random(); // placeholder for rating values\r\n\r\n                if(response.isSuccessful()) {\r\n                    String responseJSON = response.body().string();\r\n                    try {\r\n                        JSONObject jsonObject = new JSONObject(responseJSON);\r\n                        JSONArray jsonArray = null;\r\n                        if(recipeType.equals(\"Meditteranean\") || recipeType.equals(\"Popular\")) {\r\n                            jsonArray = jsonObject.getJSONArray(\"recipes\");\r\n                        }else {\r\n                            jsonArray = jsonObject.getJSONArray(\"results\");\r\n                        }\r\n                        // get the list of the recipe results from the GET request\r\n\r\n                        // traverse through the recipes and store them in a recipe list\r\n                        for(int i = 0; i < jsonArray.length(); i++) {\r\n\r\n                            JSONObject recipeJSON = jsonArray.getJSONObject(i);\r\n\r\n                            int recipeId = recipeJSON.getInt(\"id\");\r\n                            // spoonacular's rating score is not too resourceful, placeholder for now\r\n                            double rating = getRatings(recipeId) + (rand.nextInt(100-80) + 80);\r\n                            String title = recipeJSON.getString(\"title\");\r\n                            String image = recipeJSON.getString(\"image\");\r\n\r\n\r\n                            Recipe recipe = new Recipe(recipeId, title, image, rating);\r\n                            recipeList.add(recipe);\r\n\r\n                        }\r\n                    } catch(Exception e) {\r\n                        e.printStackTrace();\r\n                    }\r\n                    getActivity().runOnUiThread(new Runnable() {\r\n                        @Override\r\n                        public void run() {\r\n                            LinearLayoutManager layoutManager = new LinearLayoutManager(getActivity().getApplicationContext(), LinearLayoutManager.HORIZONTAL, false);\r\n                            switch(recipeType) {\r\n                                case \"Asian\":\r\n                                    asianRecyclerView.setLayoutManager(layoutManager);\r\n                                    asianAdapter = new HomePageAdapter(getActivity().getApplicationContext(), recipeList);\r\n                                    asianRecyclerView.setAdapter(asianAdapter);\r\n                                    break;\r\n                                case \"Western\":\r\n                                    westernRecyclerView.setLayoutManager(layoutManager);\r\n                                    westernAdapter = new HomePageAdapter(getActivity().getApplicationContext(), recipeList);\r\n                                    westernRecyclerView.setAdapter(westernAdapter);\r\n                                    break;\r\n                                case \"Meditteranean\":\r\n                                    mediterraneanRecyclerView.setLayoutManager(layoutManager);\r\n                                    mediterraneanAdapter = new HomePageAdapter(getActivity().getApplicationContext(), recipeList);\r\n                                    mediterraneanRecyclerView.setAdapter(mediterraneanAdapter);\r\n                                    break;\r\n                                case \"Popular\":\r\n                                    popularRecyclerView.setLayoutManager(layoutManager);\r\n                                    popularAdapter = new HomePageAdapter(getActivity().getApplicationContext(), recipeList);\r\n                                    popularRecyclerView.setAdapter(popularAdapter);\r\n                            }\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    public String getFragmentTag() {\r\n        return this.Tag;\r\n    }\r\n\r\n    public double getRatings(int recipeID) {\r\n        final double[] rating_value = new double[1];\r\n        OkHttpClient client = new OkHttpClient();\r\n        String urlString = \"https://spoonacular-recipe-food-nutrition-v1.p.rapidapi.com/recipes/\" + Integer.toString(recipeID)+ \"/information?includeNutrition=true\";\r\n        Request request = new Request.Builder().url(urlString).get()\r\n                .addHeader(\"x-rapidapi-key\", SPOONACULAR_API_KEY)\r\n                .addHeader(\"x-rapidapi-host\", \"spoonacular-recipe-food-nutrition-v1.p.rapidapi.com\")\r\n                .build();\r\n\r\n        client.newCall(request).enqueue(new Callback() {\r\n            @Override\r\n            public void onFailure(@NotNull Call call, @NotNull IOException e) {\r\n                e.printStackTrace();\r\n            }\r\n\r\n            @Override\r\n            public void onResponse(@NotNull Call call, @NotNull Response response) throws IOException {\r\n                if(response.isSuccessful()) {\r\n                    // JSON result\r\n                    String responseJSON = response.body().string();\r\n\r\n                    try {\r\n                        // storing the needed recipe information\r\n                        JSONObject recipeJSON = new JSONObject(responseJSON);\r\n\r\n                        rating_value[0] = recipeJSON.getDouble(\"spoonacularScore\");\r\n\r\n                    }catch (Exception e) {\r\n                        e.printStackTrace();\r\n                        rating_value[0] = -1;\r\n                    }\r\n                }\r\n            }\r\n        });\r\n\r\n        return rating_value[0];\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/simplyrecipes/Activities/HomePageFragment.java	(revision b90755def42756683ccc8edb7479a41d43c6cab2)
+++ app/src/main/java/com/example/simplyrecipes/Activities/HomePageFragment.java	(date 1605217243218)
@@ -113,8 +113,6 @@
     }
 
 
-
-
     /**
      *
      * @param urlString // api url string to search recipes
Index: app/src/main/java/com/example/simplyrecipes/Activities/PantryPageAdapter.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/simplyrecipes/Activities/PantryPageAdapter.java	(date 1605217243223)
+++ app/src/main/java/com/example/simplyrecipes/Activities/PantryPageAdapter.java	(date 1605217243223)
@@ -0,0 +1,95 @@
+package com.example.simplyrecipes.Activities;
+
+import android.app.Activity;
+import android.content.Context;
+
+import android.content.Intent;
+import android.content.res.Resources;
+import android.graphics.drawable.Drawable;
+import android.media.Image;
+import android.os.Parcelable;
+
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import androidx.annotation.NonNull;
+import androidx.appcompat.app.AppCompatActivity;
+import androidx.fragment.app.Fragment;
+import androidx.fragment.app.FragmentManager;
+import androidx.recyclerview.widget.RecyclerView;
+
+import com.example.simplyrecipes.R;
+import com.squareup.picasso.Picasso;
+
+import org.xmlpull.v1.XmlPullParserException;
+
+import java.io.IOException;
+import java.lang.reflect.Method;
+
+import java.util.List;
+
+import androidx.recyclerview.widget.RecyclerView;
+
+public class PantryPageAdapter extends RecyclerView.Adapter<PantryPageAdapter.ViewHolder> {
+
+    LayoutInflater inflater;
+    List<Ingredient> ingredients;
+    Context context;
+
+    public PantryPageAdapter(Context context, List<Ingredient> ingredients) {
+        this.inflater = LayoutInflater.from(context);
+        this.ingredients = ingredients;
+        this.context = context;
+    }
+
+    @NonNull
+    @Override
+    public ViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {
+        View view = inflater.inflate(R.layout.ingredient_pantry_card_layout, parent, false);
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void onBindViewHolder(@NonNull ViewHolder holder, final int position) {
+        holder.ingredient.setText(ingredients.get(position).getIngredientName());
+        holder.category.setText(ingredients.get(position).getIngredientCategory());
+        holder.add_to_cart.setClickable(true);
+        holder.add_to_cart.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                // TODO: Create function to add the ingredient to the shopping list database
+            }
+        });
+        holder.remove_from_pantry.setClickable(true);
+        holder.remove_from_pantry.setOnClickListener(new View.OnClickListener() {
+            @Override
+            public void onClick(View view) {
+                // TODO: Create function to remove the ingredient from the pantry list
+                ingredients.remove(ingredients.get(position));
+            }
+        });
+
+    }
+
+    @Override
+    public int getItemCount() {
+        return ingredients.size();
+    }
+
+    public class ViewHolder extends RecyclerView.ViewHolder {
+        TextView ingredient, category;
+        ImageView add_to_cart, remove_from_pantry;
+
+        public ViewHolder(@NonNull View itemView) {
+            super(itemView);
+            ingredient = itemView.findViewById(R.id.ingredient_name);
+            category = itemView.findViewById(R.id.category_tv);
+            add_to_cart = itemView.findViewById(R.id.add_shopping_list_icon);
+            remove_from_pantry = itemView.findViewById(R.id.trash_icon);
+        }
+
+    }
+}
Index: app/src/main/java/com/example/simplyrecipes/Activities/PantryFragment.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.example.simplyrecipes.Activities;\r\n\r\nimport android.os.Bundle;\r\nimport android.view.LayoutInflater;\r\nimport android.view.View;\r\nimport android.view.ViewGroup;\r\n\r\nimport androidx.annotation.Nullable;\r\nimport androidx.fragment.app.Fragment;\r\n\r\nimport com.example.simplyrecipes.R;\r\n\r\npublic class PantryFragment extends Fragment {\r\n    @Nullable\r\n    @Override\r\n    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {\r\n        return inflater.inflate(R.layout.test_pantry_fragment, container, false);\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/java/com/example/simplyrecipes/Activities/PantryFragment.java	(revision b90755def42756683ccc8edb7479a41d43c6cab2)
+++ app/src/main/java/com/example/simplyrecipes/Activities/PantryFragment.java	(date 1605221597716)
@@ -5,15 +5,62 @@
 import android.view.View;
 import android.view.ViewGroup;
 
+import androidx.annotation.NonNull;
 import androidx.annotation.Nullable;
 import androidx.fragment.app.Fragment;
+import androidx.recyclerview.widget.RecyclerView;
 
 import com.example.simplyrecipes.R;
+import com.google.firebase.auth.FirebaseAuth;
+import com.google.firebase.database.DataSnapshot;
+import com.google.firebase.database.DatabaseError;
+import com.google.firebase.database.DatabaseReference;
+import com.google.firebase.database.FirebaseDatabase;
+import com.google.firebase.database.ValueEventListener;
+
+import java.util.ArrayList;
+import java.util.List;
 
 public class PantryFragment extends Fragment {
+
+    RecyclerView mIngredientsView;
+    List<Ingredient> mIngredients;
+    PantryPageAdapter ingredientAdapter;
+    FirebaseDatabase mDatabase;
+    DatabaseReference mDbReference; // Pantry
+    FirebaseAuth mAuth;
+
+
     @Nullable
     @Override
     public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        return inflater.inflate(R.layout.test_pantry_fragment, container, false);
+        View view = inflater.inflate(R.layout.fragment_pantry, container, false);
+        return view;
+    }
+
+    public void onViewCreated(View view, Bundle savedInstanceState) {
+        mIngredientsView = view.findViewById(R.id.pantry_recyclerview);
+        mIngredients = new ArrayList<>();
+        mAuth = FirebaseAuth.getInstance();
+        mDatabase = FirebaseDatabase.getInstance();
+        mDbReference = mDatabase.
+                getReference("users/" + mAuth.getCurrentUser().getUid() + "/Pantry");
+        mDbReference.addValueEventListener(new ValueEventListener() {
+            @Override
+            public void onDataChange(@NonNull DataSnapshot snapshot) {
+                for(DataSnapshot snap : snapshot.getChildren()) {
+
+                }
+
+            }
+
+            @Override
+            public void onCancelled(@NonNull DatabaseError error) {
+                System.out.println("Error" + error.getMessage());
+            }
+        });
+    }
+
+    private void loadPantry() {
     }
 }
Index: app/src/main/res/layout/ingredient_pantry_card_layout.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<androidx.constraintlayout.widget.ConstraintLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    xmlns:tools=\"http://schemas.android.com/tools\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"wrap_content\"\r\n    android:layout_marginLeft=\"4dp\"\r\n    android:layout_marginTop=\"4dp\"\r\n    android:layout_marginEnd=\"4dp\"\r\n    android:layout_marginRight=\"4dp\">\r\n\r\n    <androidx.cardview.widget.CardView\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\"\r\n        app:layout_constraintStart_toStartOf=\"parent\"\r\n        app:layout_constraintTop_toTopOf=\"parent\">\r\n\r\n        <androidx.constraintlayout.widget.ConstraintLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\">\r\n\r\n\r\n            <!-- TODO implement function inside .java class -->\r\n\r\n            <ImageView\r\n                android:id=\"@+id/trash_icon\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginEnd=\"24dp\"\r\n                android:contentDescription=\"@string/trash\"\r\n                android:onClick=\"deleteIngredient\"\r\n                android:src=\"@drawable/ic_trash_24dp\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toEndOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <!-- TODO implement function inside .java class -->\r\n\r\n            <ImageView\r\n                android:id=\"@+id/add_shopping_list_icon\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginEnd=\"20dp\"\r\n                android:onClick=\"addToShoppingList\"\r\n                android:src=\"@drawable/ic_iconmonstr_shopping_cart_add\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintEnd_toStartOf=\"@id/trash_icon\"\r\n                app:layout_constraintTop_toTopOf=\"parent\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/ingredient\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:layout_marginTop=\"3dp\"\r\n                android:layout_marginBottom=\"6dp\"\r\n                android:text=\"Tomato\"\r\n                android:textColor=\"@color/colorHeading\"\r\n                android:textSize=\"14sp\"\r\n                android:textStyle=\"bold\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toTopOf=\"parent\"\r\n                app:layout_constraintVertical_bias=\"1.0\" />\r\n\r\n            <TextView\r\n                android:id=\"@+id/category_tv\"\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_marginVertical=\"3dp\"\r\n                android:layout_marginStart=\"16dp\"\r\n                android:layout_marginBottom=\"3dp\"\r\n                android:text=\"Vegetables\"\r\n                android:textSize=\"11sp\"\r\n                app:layout_constraintBottom_toBottomOf=\"parent\"\r\n                app:layout_constraintStart_toStartOf=\"parent\"\r\n                app:layout_constraintTop_toBottomOf=\"@id/ingredient\" />\r\n\r\n        </androidx.constraintlayout.widget.ConstraintLayout>\r\n\r\n    </androidx.cardview.widget.CardView>\r\n</androidx.constraintlayout.widget.ConstraintLayout>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/src/main/res/layout/ingredient_pantry_card_layout.xml	(revision b90755def42756683ccc8edb7479a41d43c6cab2)
+++ app/src/main/res/layout/ingredient_pantry_card_layout.xml	(date 1605217243236)
@@ -24,8 +24,8 @@
 
             <ImageView
                 android:id="@+id/trash_icon"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
+                android:layout_width="19dp"
+                android:layout_height="17dp"
                 android:layout_marginEnd="24dp"
                 android:contentDescription="@string/trash"
                 android:onClick="deleteIngredient"
@@ -38,8 +38,8 @@
 
             <ImageView
                 android:id="@+id/add_shopping_list_icon"
-                android:layout_width="wrap_content"
-                android:layout_height="wrap_content"
+                android:layout_width="18dp"
+                android:layout_height="18dp"
                 android:layout_marginEnd="20dp"
                 android:onClick="addToShoppingList"
                 android:src="@drawable/ic_iconmonstr_shopping_cart_add"
@@ -48,7 +48,7 @@
                 app:layout_constraintTop_toTopOf="parent" />
 
             <TextView
-                android:id="@+id/ingredient"
+                android:id="@+id/ingredient_name"
                 android:layout_width="wrap_content"
                 android:layout_height="wrap_content"
                 android:layout_marginStart="16dp"
@@ -73,7 +73,7 @@
                 android:textSize="11sp"
                 app:layout_constraintBottom_toBottomOf="parent"
                 app:layout_constraintStart_toStartOf="parent"
-                app:layout_constraintTop_toBottomOf="@id/ingredient" />
+                app:layout_constraintTop_toBottomOf="@id/ingredient_name" />
 
         </androidx.constraintlayout.widget.ConstraintLayout>
 
